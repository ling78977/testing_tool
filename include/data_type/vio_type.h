/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: include/data_type/vio_type.h
  Source: /home/ling/projects/dds_sub/idl/vio_type.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef MYPROJ_INCLUDE_DATA_TYPE_VIO_TYPE_H_ED96ABC60AE08E26FD0737CD8377C617
#define MYPROJ_INCLUDE_DATA_TYPE_VIO_TYPE_H_ED96ABC60AE08E26FD0737CD8377C617

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct vio_state_t
{
  double stamp;
  double x;
  double y;
  double z;
  double qw;
  double qx;
  double qy;
  double qz;
  double vx;
  double vy;
  double vz;
  double bax;
  double bay;
  double baz;
  double bgx;
  double bgy;
  double bgz;
  double td;
  uint8_t solver_flag;
  uint8_t gnss_align;
  uint8_t zupt_state;
  uint8_t failure_occur;
  uint32_t last_track_num;
} vio_state_t;

extern const dds_topic_descriptor_t vio_state_t_desc;

#define vio_state_t__alloc() \
((vio_state_t*) dds_alloc (sizeof (vio_state_t)));

#define vio_state_t_free(d,o) \
dds_sample_free ((d), &vio_state_t_desc, (o))

typedef struct vio_to_app_msg_t
{
  double x;
  double y;
  double heading;
  uint8_t vio_state;
  uint8_t brightness;
  uint16_t detect_feature_num;
  uint16_t track_feature_num;
} vio_to_app_msg_t;

extern const dds_topic_descriptor_t vio_to_app_msg_t_desc;

#define vio_to_app_msg_t__alloc() \
((vio_to_app_msg_t*) dds_alloc (sizeof (vio_to_app_msg_t)));

#define vio_to_app_msg_t_free(d,o) \
dds_sample_free ((d), &vio_to_app_msg_t_desc, (o))

typedef struct vio_pose_t
{
  double stamp;
  double x;
  double y;
  double z;
  double qw;
  double qx;
  double qy;
  double qz;
  uint8_t solver_flag;
  uint8_t gnss_align;
  uint8_t failure_occur;
} vio_pose_t;

extern const dds_topic_descriptor_t vio_pose_t_desc;

#define vio_pose_t__alloc() \
((vio_pose_t*) dds_alloc (sizeof (vio_pose_t)));

#define vio_pose_t_free(d,o) \
dds_sample_free ((d), &vio_pose_t_desc, (o))

typedef struct odom_pos_t
{
  double stamp;
  double x;
  double y;
  double heading;
} odom_pos_t;

extern const dds_topic_descriptor_t odom_pos_t_desc;

#define odom_pos_t__alloc() \
((odom_pos_t*) dds_alloc (sizeof (odom_pos_t)));

#define odom_pos_t_free(d,o) \
dds_sample_free ((d), &odom_pos_t_desc, (o))

typedef struct ins_pos_t
{
  double stamp;
  double x;
  double y;
  double z;
  double qw;
  double qx;
  double qy;
  double qz;
  uint8_t init_status;
  uint8_t rtk_status;
  uint8_t fusion_mode;
} ins_pos_t;

extern const dds_topic_descriptor_t ins_pos_t_desc;

#define ins_pos_t__alloc() \
((ins_pos_t*) dds_alloc (sizeof (ins_pos_t)));

#define ins_pos_t_free(d,o) \
dds_sample_free ((d), &ins_pos_t_desc, (o))

typedef struct ins_state_t
{
  double stamp;
  double x;
  double y;
  double z;
  double qw;
  double qx;
  double qy;
  double qz;
  double vx;
  double vy;
  double vz;
  double bax;
  double bay;
  double baz;
  double bgx;
  double bgy;
  double bgz;
} ins_state_t;

extern const dds_topic_descriptor_t ins_state_t_desc;

#define ins_state_t__alloc() \
((ins_state_t*) dds_alloc (sizeof (ins_state_t)));

#define ins_state_t_free(d,o) \
dds_sample_free ((d), &ins_state_t_desc, (o))

typedef struct base_station_lla_t
{
  double lat;
  double lon;
  double alt;
} base_station_lla_t;

extern const dds_topic_descriptor_t base_station_lla_t_desc;

#define base_station_lla_t__alloc() \
((base_station_lla_t*) dds_alloc (sizeof (base_station_lla_t)));

#define base_station_lla_t_free(d,o) \
dds_sample_free ((d), &base_station_lla_t_desc, (o))

typedef struct vision_ctrl_msg_t
{
  int32_t type;
  int32_t cmd;
} vision_ctrl_msg_t;

extern const dds_topic_descriptor_t vision_ctrl_msg_t_desc;

#define vision_ctrl_msg_t__alloc() \
((vision_ctrl_msg_t*) dds_alloc (sizeof (vision_ctrl_msg_t)));

#define vision_ctrl_msg_t_free(d,o) \
dds_sample_free ((d), &vision_ctrl_msg_t_desc, (o))

typedef struct vision_mower_control_t
{
  uint8_t enable_obstacle_detection;
  uint8_t enable_edge_detection;
  uint8_t enable_basestation_detection;
  uint8_t enable_map_create;
  uint8_t enable_map_location;
  uint8_t enable_dirty_detection;
} vision_mower_control_t;

extern const dds_topic_descriptor_t vision_mower_control_t_desc;

#define vision_mower_control_t__alloc() \
((vision_mower_control_t*) dds_alloc (sizeof (vision_mower_control_t)));

#define vision_mower_control_t_free(d,o) \
dds_sample_free ((d), &vision_mower_control_t_desc, (o))

typedef struct dirft_pose_t
{
  double stamp;
  double x;
  double y;
  double z;
  double qw;
  double qx;
  double qy;
  double qz;
} dirft_pose_t;

extern const dds_topic_descriptor_t dirft_pose_t_desc;

#define dirft_pose_t__alloc() \
((dirft_pose_t*) dds_alloc (sizeof (dirft_pose_t)));

#define dirft_pose_t_free(d,o) \
dds_sample_free ((d), &dirft_pose_t_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* MYPROJ_INCLUDE_DATA_TYPE_VIO_TYPE_H_ED96ABC60AE08E26FD0737CD8377C617 */
