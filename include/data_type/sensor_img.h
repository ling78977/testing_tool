/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: include/data_type/sensor_img.h
  Source: /home/ling/projects/dds_sub/idl/sensor_img.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef MYPROJ_INCLUDE_DATA_TYPE_SENSOR_IMG_H_06778646D5069A230A9B0E8EB98B2358
#define MYPROJ_INCLUDE_DATA_TYPE_SENSOR_IMG_H_06778646D5069A230A9B0E8EB98B2358

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

#define VIO_DATA_MAX_LEN 512
#define IMG_HEAD_SIZE 152
#define NV12_1920_1080_size 1413120
#define VIO_ENCODE_DATA_MAX_LEN 102400
#define VIDEO_STREAM_SIZE 144
#define H264_864_460_size 819200
typedef enum camera_position_e
{
  CAMERA_POSITION_LEFT,
  CAMERA_POSITION_RIGHT,
  CAMERA_POSITION_REAR,
  CAMERA_POSITION_MAX
} camera_position_e;

#define camera_position_e__alloc() \
((camera_position_e*) dds_alloc (sizeof (camera_position_e)));

typedef struct sensor_img_data_t
{
  char buff[1048576];
} sensor_img_data_t;

extern const dds_topic_descriptor_t sensor_img_data_t_desc;

#define sensor_img_data_t__alloc() \
((sensor_img_data_t*) dds_alloc (sizeof (sensor_img_data_t)));

#define sensor_img_data_t_free(d,o) \
dds_sample_free ((d), &sensor_img_data_t_desc, (o))

typedef struct sensor_encode_data_t
{
  camera_position_e type;
  uint32_t buff_size;
  uint32_t width;
  uint32_t height;
  uint32_t frame_rate;
  uint32_t bitrate;
  char buff[102400];
} sensor_encode_data_t;

extern const dds_topic_descriptor_t sensor_encode_data_t_desc;

#define sensor_encode_data_t__alloc() \
((sensor_encode_data_t*) dds_alloc (sizeof (sensor_encode_data_t)));

#define sensor_encode_data_t_free(d,o) \
dds_sample_free ((d), &sensor_encode_data_t_desc, (o))

typedef struct sensor_req_key_frame_t
{
  camera_position_e type;
} sensor_req_key_frame_t;

extern const dds_topic_descriptor_t sensor_req_key_frame_t_desc;

#define sensor_req_key_frame_t__alloc() \
((sensor_req_key_frame_t*) dds_alloc (sizeof (sensor_req_key_frame_t)));

#define sensor_req_key_frame_t_free(d,o) \
dds_sample_free ((d), &sensor_req_key_frame_t_desc, (o))

typedef struct sensor_vision_data_t
{
  uint32_t type;
  uint32_t length;
  uint8_t value[512];
  double timestamp;
} sensor_vision_data_t;

extern const dds_topic_descriptor_t sensor_vision_data_t_desc;

#define sensor_vision_data_t__alloc() \
((sensor_vision_data_t*) dds_alloc (sizeof (sensor_vision_data_t)));

#define sensor_vision_data_t_free(d,o) \
dds_sample_free ((d), &sensor_vision_data_t_desc, (o))

typedef struct sensor_watchback_data_t
{
  char info[152];
  uint8_t data[1413120];
} sensor_watchback_data_t;

extern const dds_topic_descriptor_t sensor_watchback_data_t_desc;

#define sensor_watchback_data_t__alloc() \
((sensor_watchback_data_t*) dds_alloc (sizeof (sensor_watchback_data_t)));

#define sensor_watchback_data_t_free(d,o) \
dds_sample_free ((d), &sensor_watchback_data_t_desc, (o))

typedef struct sensor_watchback_h264_data_t
{
  char info[144];
  uint8_t data[819200];
} sensor_watchback_h264_data_t;

extern const dds_topic_descriptor_t sensor_watchback_h264_data_t_desc;

#define sensor_watchback_h264_data_t__alloc() \
((sensor_watchback_h264_data_t*) dds_alloc (sizeof (sensor_watchback_h264_data_t)));

#define sensor_watchback_h264_data_t_free(d,o) \
dds_sample_free ((d), &sensor_watchback_h264_data_t_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* MYPROJ_INCLUDE_DATA_TYPE_SENSOR_IMG_H_06778646D5069A230A9B0E8EB98B2358 */
