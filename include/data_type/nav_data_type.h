/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: include/data_type/nav_data_type.h
  Source: /home/ling/projects/dds_sub/idl/nav_data_type.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef MYPROJ_INCLUDE_DATA_TYPE_NAV_DATA_TYPE_H_50702E19C9B9827932F2562409C9E04B
#define MYPROJ_INCLUDE_DATA_TYPE_NAV_DATA_TYPE_H_50702E19C9B9827932F2562409C9E04B

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct nav_state_data_t
{
  uint8_t nav_state;
  uint8_t work_mode;
  uint8_t localization_state;
  uint8_t extend_dis_percent;
  float nav_pos_x_m;
  float nav_pos_y_m;
  float heading_deg;
  double origin_lat_rad;
  double origin_lon_rad;
  double origin_alt_m;
  uint8_t vision_vaild;
  uint8_t pos_in_map_type;
  uint64_t pos_in_map_hash;
  float extend_dis;
  uint8_t avoidance_state;
  uint8_t heading_state;
} nav_state_data_t;

extern const dds_topic_descriptor_t nav_state_data_t_desc;

#define nav_state_data_t__alloc() \
((nav_state_data_t*) dds_alloc (sizeof (nav_state_data_t)));

#define nav_state_data_t_free(d,o) \
dds_sample_free ((d), &nav_state_data_t_desc, (o))

typedef struct map_state_data_t
{
  uint64_t total_map_hash;
  uint8_t last_record_state;
  uint8_t current_record_state;
  uint8_t record_finished_state;
  uint8_t rollback_ready_state;
  uint8_t edit_ready_state;
  uint8_t edit_direction;
  uint8_t record_type;
  float dis2boundary;
  float projected_point_x;
  float projected_point_y;
  float remain_area;
  float current_record_area;
  float current_record_perimeter;
} map_state_data_t;

extern const dds_topic_descriptor_t map_state_data_t_desc;

#define map_state_data_t__alloc() \
((map_state_data_t*) dds_alloc (sizeof (map_state_data_t)));

#define map_state_data_t_free(d,o) \
dds_sample_free ((d), &map_state_data_t_desc, (o))

typedef struct zone_finished_state_t
{
  uint64_t zone_hash;
  uint8_t zone_finish_state;
} zone_finished_state_t;

extern const dds_topic_descriptor_t zone_finished_state_t_desc;

#define zone_finished_state_t__alloc() \
((zone_finished_state_t*) dds_alloc (sizeof (zone_finished_state_t)));

#define zone_finished_state_t_free(d,o) \
dds_sample_free ((d), &zone_finished_state_t_desc, (o))

typedef struct map_covered_state_t
{
  uint64_t total_coverage_path_hash;
  uint64_t current_coverage_path_hash;
  uint16_t start_point_index;
  uint16_t current_covered_num;
  uint8_t cover_direction;
  float current_projected_point_x;
  float current_projected_point_y;
  float total_working_time;
  float total_working_area;
  float remain_working_time;
  float area_covered_percent;
  uint8_t selected_zones_num;
  struct zone_finished_state_t zone_work_state[100];
} map_covered_state_t;

extern const dds_topic_descriptor_t map_covered_state_t_desc;

#define map_covered_state_t__alloc() \
((map_covered_state_t*) dds_alloc (sizeof (map_covered_state_t)));

#define map_covered_state_t_free(d,o) \
dds_sample_free ((d), &map_covered_state_t_desc, (o))

typedef struct break_point_data_t
{
  uint8_t break_point_reason;
  float break_point_x;
  float break_point_y;
} break_point_data_t;

extern const dds_topic_descriptor_t break_point_data_t_desc;

#define break_point_data_t__alloc() \
((break_point_data_t*) dds_alloc (sizeof (break_point_data_t)));

#define break_point_data_t_free(d,o) \
dds_sample_free ((d), &break_point_data_t_desc, (o))

typedef struct charger_data_t
{
  uint8_t charger_set_state;
  float charger_pos_yaw;
  float charger_pos_x;
  float charger_pos_y;
} charger_data_t;

extern const dds_topic_descriptor_t charger_data_t_desc;

#define charger_data_t__alloc() \
((charger_data_t*) dds_alloc (sizeof (charger_data_t)));

#define charger_data_t_free(d,o) \
dds_sample_free ((d), &charger_data_t_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* MYPROJ_INCLUDE_DATA_TYPE_NAV_DATA_TYPE_H_50702E19C9B9827932F2562409C9E04B */
