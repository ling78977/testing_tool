/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: include/data_type/sensor_utils.h
  Source: /home/ling/projects/dds_sub/idl/sensor_utils.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef MYPROJ_INCLUDE_DATA_TYPE_SENSOR_UTILS_H_7812BFA724A78CEE9539313F3BCA8810
#define MYPROJ_INCLUDE_DATA_TYPE_SENSOR_UTILS_H_7812BFA724A78CEE9539313F3BCA8810

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

#define OdomData_type 161
#define GNSSData_type 162
#define BaseStationData_type 163
typedef struct sensor_odom_data_t
{
  double stamp;
  double lin_vel;
  double ang_vel;
} sensor_odom_data_t;

extern const dds_topic_descriptor_t sensor_odom_data_t_desc;

#define sensor_odom_data_t__alloc() \
((sensor_odom_data_t*) dds_alloc (sizeof (sensor_odom_data_t)));

#define sensor_odom_data_t_free(d,o) \
dds_sample_free ((d), &sensor_odom_data_t_desc, (o))

typedef struct sensor_gnss_data_t
{
  double stamp;
  double lat;
  double lon;
  double alt;
  float lat_std;
  float lon_std;
  float alt_std;
  float hor_spd;
  float trk_gnd;
  float vert_spd;
  float diff_age;
  uint16_t rtk_status;
  uint16_t num_sta;
} sensor_gnss_data_t;

extern const dds_topic_descriptor_t sensor_gnss_data_t_desc;

#define sensor_gnss_data_t__alloc() \
((sensor_gnss_data_t*) dds_alloc (sizeof (sensor_gnss_data_t)));

#define sensor_gnss_data_t_free(d,o) \
dds_sample_free ((d), &sensor_gnss_data_t_desc, (o))

typedef struct sensor_gnss_pos_t
{
  double stamp;
  double x;
  double y;
  double z;
  uint8_t status;
} sensor_gnss_pos_t;

extern const dds_topic_descriptor_t sensor_gnss_pos_t_desc;

#define sensor_gnss_pos_t__alloc() \
((sensor_gnss_pos_t*) dds_alloc (sizeof (sensor_gnss_pos_t)));

#define sensor_gnss_pos_t_free(d,o) \
dds_sample_free ((d), &sensor_gnss_pos_t_desc, (o))

typedef struct sensor_base_station_data_t
{
  double stamp;
  uint32_t status;
  uint32_t health;
  double x;
  double y;
  double z;
} sensor_base_station_data_t;

extern const dds_topic_descriptor_t sensor_base_station_data_t_desc;

#define sensor_base_station_data_t__alloc() \
((sensor_base_station_data_t*) dds_alloc (sizeof (sensor_base_station_data_t)));

#define sensor_base_station_data_t_free(d,o) \
dds_sample_free ((d), &sensor_base_station_data_t_desc, (o))

typedef struct sensor_rtk_signal_t
{
  double stamp;
  uint8_t rtk_status;
  uint8_t connect_state;
  uint8_t rover_quality;
  uint8_t station_quality;
  uint8_t rover_stars;
  uint8_t station_l1_stars;
  uint8_t station_l2_stars;
  uint8_t co_l1_stars;
  uint8_t co_l2_stars;
  uint8_t is_rtk_resetting;
} sensor_rtk_signal_t;

extern const dds_topic_descriptor_t sensor_rtk_signal_t_desc;

#define sensor_rtk_signal_t__alloc() \
((sensor_rtk_signal_t*) dds_alloc (sizeof (sensor_rtk_signal_t)));

#define sensor_rtk_signal_t_free(d,o) \
dds_sample_free ((d), &sensor_rtk_signal_t_desc, (o))

typedef struct lora_info_t
{
  uint32_t pair_code_scan;
  uint32_t pair_code_channel;
  uint32_t pair_code_locid;
  uint32_t pair_code_netid;
  uint32_t lora_connection_status;
} lora_info_t;

extern const dds_topic_descriptor_t lora_info_t_desc;

#define lora_info_t__alloc() \
((lora_info_t*) dds_alloc (sizeof (lora_info_t)));

#define lora_info_t_free(d,o) \
dds_sample_free ((d), &lora_info_t_desc, (o))

typedef struct wiper_info_t
{
  uint8_t wiper_state;
} wiper_info_t;

extern const dds_topic_descriptor_t wiper_info_t_desc;

#define wiper_info_t__alloc() \
((wiper_info_t*) dds_alloc (sizeof (wiper_info_t)));

#define wiper_info_t_free(d,o) \
dds_sample_free ((d), &wiper_info_t_desc, (o))

typedef struct wiper_ctrl_t
{
  uint32_t round;
} wiper_ctrl_t;

extern const dds_topic_descriptor_t wiper_ctrl_t_desc;

#define wiper_ctrl_t__alloc() \
((wiper_ctrl_t*) dds_alloc (sizeof (wiper_ctrl_t)));

#define wiper_ctrl_t_free(d,o) \
dds_sample_free ((d), &wiper_ctrl_t_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* MYPROJ_INCLUDE_DATA_TYPE_SENSOR_UTILS_H_7812BFA724A78CEE9539313F3BCA8810 */
