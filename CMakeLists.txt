cmake_minimum_required(VERSION 3.19)
project(FoxgloveWebSocketExamples C CXX)
# cmake_policy(SET CMP0167 NEW)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)


find_package(FlatBuffers REQUIRED)

FILE(GLOB flatbuffers_schemas "schemas/*.fbs")
build_flatbuffers(
    "${flatbuffers_schemas}"
    flatbuffers
    flatbuffers_generated_schemas
    ""
    ${CMAKE_CURRENT_SOURCE_DIR}/autogenerated_flatbuffers_h
    ${CMAKE_CURRENT_SOURCE_DIR}/program/autogenerated_flatbuffers_bfbs
    "--gen-all --cpp --filename-suffix _generated"
)

# Add subdirectories
add_subdirectory(foxglove-websocket)
add_subdirectory(dds_subscriber)

find_package(OpenSSL REQUIRED)
find_package(Boost REQUIRED COMPONENTS system thread)
find_package(Threads REQUIRED)
find_package(CycloneDDS REQUIRED)
add_executable(example_server_flatbuffers src/example_server_flatbuffers.cpp src/data_type/sensor_imu_type.c src/data_type/chassis_data_type.c ${autogenerated_flatbuffers_h})
add_dependencies(example_server_flatbuffers flatbuffers_generated_schemas)

add_executable(pub  src/pub.c src/data_type/sensor_imu_type.c src/data_type/chassis_data_type.c )

set_target_properties(example_server_flatbuffers PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/program
)

target_link_libraries(pub
    # flatbuffers::flatbuffers
    # foxglove_websocket  
    # Boost::system
    # Boost::thread
    # Threads::Threads
    CycloneDDS::ddsc
    # dds_subscriber
)

target_link_libraries(example_server_flatbuffers
    flatbuffers::flatbuffers
    foxglove_websocket  
    Boost::system
    Boost::thread
    Threads::Threads
    # CycloneDDS::ddsc
    dds_subscriber
)
target_include_directories(example_server_flatbuffers PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/foxglove-websocket/include
    ${CMAKE_CURRENT_SOURCE_DIR}/autogenerated_flatbuffers_h
    ${CMAKE_CURRENT_SOURCE_DIR}/foxglove-websocket/build/include
    ${CMAKE_CURRENT_SOURCE_DIR}/include/data_type
    ${CMAKE_CURRENT_SOURCE_DIR}/dds_subscriber/include
)

target_include_directories(pub PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/include/data_type
)
